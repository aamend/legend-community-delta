{
  "classifierPath" : "meta::pure::metamodel::type::Class",
  "content" : {
    "_type" : "class",
    "constraints" : [ {
      "functionDefinition" : {
        "_type" : "lambda",
        "body" : [ {
          "_type" : "func",
          "function" : "greaterThanEqual",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "encumbrance_amount"
          }, {
            "_type" : "integer",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "values" : [ 0 ]
          } ]
        } ],
        "parameters" : [ ]
      },
      "name" : "[encumbrance_amount] should be positive"
    }, {
      "functionDefinition" : {
        "_type" : "lambda",
        "body" : [ {
          "_type" : "func",
          "function" : "lessThanEqual",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "fvh_level"
          }, {
            "_type" : "integer",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "values" : [ 3 ]
          } ]
        } ],
        "parameters" : [ ]
      },
      "name" : "[fvh_level] should be lower than 3"
    }, {
      "functionDefinition" : {
        "_type" : "lambda",
        "body" : [ {
          "_type" : "func",
          "function" : "greaterThanEqual",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "guarantee_amount"
          }, {
            "_type" : "integer",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "values" : [ 0 ]
          } ]
        } ],
        "parameters" : [ ]
      },
      "name" : "[guarantee_amount] should be positive"
    }, {
      "functionDefinition" : {
        "_type" : "lambda",
        "body" : [ {
          "_type" : "func",
          "function" : "greaterThanEqual",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "impairment_amount"
          }, {
            "_type" : "integer",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "values" : [ 0 ]
          } ]
        } ],
        "parameters" : [ ]
      },
      "name" : "[impairment_amount] should be positive"
    }, {
      "functionDefinition" : {
        "_type" : "lambda",
        "body" : [ {
          "_type" : "func",
          "function" : "greaterThanEqual",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "insolvency_rank"
          }, {
            "_type" : "integer",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "values" : [ 1 ]
          } ]
        } ],
        "parameters" : [ ]
      },
      "name" : "[insolvency_rank] should be at least 1"
    }, {
      "functionDefinition" : {
        "_type" : "lambda",
        "body" : [ {
          "_type" : "func",
          "function" : "greaterThanEqual",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "count"
          }, {
            "_type" : "integer",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "values" : [ 1 ]
          } ]
        } ],
        "parameters" : [ ]
      },
      "name" : "[count] should be at least 1"
    }, {
      "functionDefinition" : {
        "_type" : "lambda",
        "body" : [ {
          "_type" : "func",
          "function" : "greaterThanEqual",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "fvh_level"
          }, {
            "_type" : "integer",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "values" : [ 1 ]
          } ]
        } ],
        "parameters" : [ ]
      },
      "name" : "[fvh_level] should be greater than 1"
    } ],
    "name" : "account",
    "package" : "fire",
    "properties" : [ {
      "multiplicity" : {
        "lowerBound" : 1,
        "upperBound" : 1
      },
      "name" : "id",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The unique identifier for the account within the financial institution."
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 1,
        "upperBound" : 1
      },
      "name" : "date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601."
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "acc_fv_change_before_taxes",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "Accumulated change in fair value before taxes."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "accounting_treatment",
      "type" : "fire::common::accounting_treatment"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "accrued_interest",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The accrued interest since the last payment date and due at the next payment date. Monetary type represented as a naturally positive integer number of cents/pence."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "arrears_balance",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The balance of the capital amount that is considered to be in arrears (for overdrafts/credit cards). Monetary type represented as a naturally positive integer number of cents/pence."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "asset_liability",
      "type" : "fire::common::asset_liability"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "balance",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The contractual balance on the date and in the currency given. Monetary type represented as a naturally positive integer number of cents/pence."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "base_rate",
      "type" : "fire::common::base_rate"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "behavioral_curve_id",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The unique identifier for the behavioral curve used by the financial institution."
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 1
      },
      "name" : "break_dates",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "Dates where this contract can be broken (by either party). Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601."
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 1
      },
      "name" : "call_dates",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "Dates where this contract can be called (by the customer). Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601."
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "country_code",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "Two-letter country code for account location/jurisdiction. In accordance with ISO 3166-1."
      } ],
      "type" : "fire::common::country_code"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "cost_center_code",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The organizational unit or sub-unit to which costs/profits are booked."
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "currency_code",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "Actual currency of the Account in accordance with ISO 4217 standards. It should be consistent with balance, accrued_interest, guarantee_amount and other monetary amounts."
      } ],
      "type" : "fire::common::currency_code"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "customer_id",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The unique identifier used by the financial institution to identify the customer that owns the account."
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "end_date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The end or maturity date of the account. Format should be YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601"
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "encumbrance_amount",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The amount of the account that is encumbered by potential future commitments or legal liabilities. Monetary type represented as a naturally positive integer number of cents/pence."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "encumbrance_type",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The type of the encumbrance causing the encumbrance_amount."
      } ],
      "type" : "fire::account_base::encumbrance_type"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "fvh_level",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "Fair value hierarchy category according to IFRS 13.93 (b)"
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "first_payment_date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The first payment date for interest payments."
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "guarantee_amount",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The amount of the account that is guaranteed under a Government Deposit Guarantee Scheme. Monetary type represented as a naturally positive integer number of cents/pence."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "guarantee_scheme",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The Government Deposit Scheme scheme under which the guarantee_amount is guaranteed."
      } ],
      "type" : "fire::account_base::guarantee_scheme"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "impairment_amount",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The impairment amount is the allowance set aside by the firm that accounts for the event that the asset becomes impaired in the future."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "impairment_status",
      "type" : "fire::common::impairment_status"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "insolvency_rank",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The insolvency ranking as per the national legal framework of the reporting institution."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "interest_repayment_frequency",
      "type" : "fire::common::interest_repayment_frequency"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "last_payment_date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The final payment date for interest payments, often coincides with end_date."
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "ledger_code",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The internal ledger code or line item name."
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "limit_amount",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The minimum balance the customer can go overdrawn in their account."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "next_payment_date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The next date at which interest will be paid or accrued_interest balance returned to zero."
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "next_withdrawal_date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The next date at which customer is allowed to withdraw money from this account."
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "on_balance_sheet",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "Is the account or deposit reported on the balance sheet of the financial institution?"
      } ],
      "type" : "Boolean"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "prev_payment_date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The most recent previous date at which interest was paid or accrued_interest balance returned to zero."
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "product_name",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The name of the product as given by the financial institution to be used for display and reference purposes."
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "purpose",
      "type" : "fire::account_base::purpose"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "rate",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The full interest rate applied to the account balance in percentage terms. Note that this therefore includes the base_rate (ie. not the spread)."
      } ],
      "type" : "Decimal"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "rate_type",
      "type" : "fire::account_base::rate_type"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "regulatory_book",
      "type" : "fire::common::regulatory_book"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "reporting_entity_name",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The name of the reporting legal entity for display purposes."
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "reporting_id",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The internal ID for the legal entity under which the account is being reported."
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "risk_country_code",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "Two-letter country code describing where the risk for the account resides. In accordance with ISO 3166-1"
      } ],
      "type" : "fire::common::country_code"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "source",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2"
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "start_date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The timestamp that the trade or financial product commences. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601."
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "status",
      "type" : "fire::account_base::status"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "type",
      "type" : "fire::account_base::type"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "trade_date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The timestamp that the trade or financial product terms are agreed. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601."
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "uk_funding_type",
      "type" : "fire::account_base::uk_funding_type"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "version_id",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The version identifier of the data such as the firm's internal batch identifier."
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "withdrawal_penalty",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "This is the penalty incurred by the customer for an early withdrawal on this account. An early withdrawal is defined as a withdrawal prior to the next_withdrawal_date. Monetary type represented as a naturally positive integer number of cents/pence."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "count",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "Describes the number of accounts aggregated into a single row."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "minimum_balance_eur",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "Indicates the minimum balance, in Euros, of each account within the aggregate. Monetary type represented as a naturally positive integer number of cents/pence."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "next_repricing_date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The date on which the interest rate of the account will be re-calculated. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601."
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "risk_weight_std",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The standardised approach risk weight represented as a decimal/float such that 1.5% is 0.015."
      } ],
      "type" : "Decimal"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "ccf",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The credit conversion factor that indicates the proportion of the undrawn amount that would be drawn down on default."
      } ],
      "type" : "Decimal"
    } ],
    "taggedValues" : [ {
      "tag" : {
        "profile" : "meta::pure::profiles::doc",
        "value" : "doc"
      },
      "value" : "An Account represents a financial account that describes the funds that a customer has entrusted to a financial institution in the form of deposits or credit balances."
    } ]
  }
}