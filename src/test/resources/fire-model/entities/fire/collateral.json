{
  "classifierPath" : "meta::pure::metamodel::type::Class",
  "content" : {
    "_type" : "class",
    "constraints" : [ {
      "functionDefinition" : {
        "_type" : "lambda",
        "body" : [ {
          "_type" : "func",
          "function" : "greaterThanEqual",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "charge"
          }, {
            "_type" : "integer",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "values" : [ 0 ]
          } ]
        } ],
        "parameters" : [ ]
      },
      "name" : "[charge] should be positive"
    }, {
      "functionDefinition" : {
        "_type" : "lambda",
        "body" : [ {
          "_type" : "func",
          "function" : "greaterThanEqual",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "encumbrance_amount"
          }, {
            "_type" : "integer",
            "multiplicity" : {
              "lowerBound" : 1,
              "upperBound" : 1
            },
            "values" : [ 0 ]
          } ]
        } ],
        "parameters" : [ ]
      },
      "name" : "[encumbrance_amount] should be positive"
    } ],
    "name" : "collateral",
    "package" : "fire",
    "properties" : [ {
      "multiplicity" : {
        "lowerBound" : 1,
        "upperBound" : 1
      },
      "name" : "id",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The unique identifier for the collateral within the financial institution."
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 1,
        "upperBound" : 1
      },
      "name" : "date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601."
      } ],
      "type" : "DateTime"
    }, {
      "multiplicity" : {
        "lowerBound" : 1
      },
      "name" : "loan_ids",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The unique identifiers for the loans within the financial institution."
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 1
      },
      "name" : "account_ids",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The unique identifier/s for the account/s within the financial institution."
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "charge",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "Lender charge on collateral, 1 indicates first charge, 2 second and so on. 0 indicates a combination of charge levels."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "currency_code",
      "type" : "fire::common::currency_code"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "encumbrance_amount",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The amount of the collateral that is encumbered by potential future commitments or legal liabilities. Monetary type represented as a naturally positive integer number of cents/pence."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "encumbrance_type",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The type of the encumbrance causing the encumbrance_amount."
      } ],
      "type" : "fire::collateral_base::encumbrance_type"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "end_date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The end date for recognition of the collateral"
      } ],
      "type" : "Date"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "regulatory_book",
      "type" : "fire::common::regulatory_book"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "source",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2"
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "start_date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The start date for recognition of the collateral"
      } ],
      "type" : "Date"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "type",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The collateral type defines the form of the collateral provided (should not be null)"
      } ],
      "type" : "fire::collateral_base::type"
    }, {
      "multiplicity" : {
        "lowerBound" : 1,
        "upperBound" : 1
      },
      "name" : "value",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The valuation as used by the bank for the collateral on the value_date. Monetary type represented as a naturally positive integer number of cents/pence."
      } ],
      "type" : "Integer"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "value_date",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The timestamp that the collateral was valued"
      } ],
      "type" : "Date"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "version_id",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The version identifier of the data such as the firm's internal batch identifier"
      } ],
      "type" : "String"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "vol_adj",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The volatility adjustment appropriate to the collateral."
      } ],
      "type" : "Decimal"
    }, {
      "multiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "name" : "vol_adj_fx",
      "taggedValues" : [ {
        "tag" : {
          "profile" : "meta::pure::profiles::doc",
          "value" : "doc"
        },
        "value" : "The volatility adjustment appropriate to currency mismatch."
      } ],
      "type" : "Decimal"
    } ],
    "qualifiedProperties" : [ {
      "body" : [ {
        "_type" : "func",
        "function" : "split",
        "parameters" : [ {
          "_type" : "func",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "source"
          } ]
        }, {
          "_type" : "string",
          "multiplicity" : {
            "lowerBound" : 1,
            "upperBound" : 1
          },
          "values" : [ "-" ]
        } ]
      } ],
      "name" : "sources",
      "parameters" : [ ],
      "returnMultiplicity" : {
        "lowerBound" : 0
      },
      "returnType" : "String"
    }, {
      "body" : [ {
        "_type" : "func",
        "function" : "dateDiff",
        "parameters" : [ {
          "_type" : "func",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "start_date"
          } ]
        }, {
          "_type" : "func",
          "function" : "toOne",
          "parameters" : [ {
            "_type" : "property",
            "parameters" : [ {
              "_type" : "var",
              "name" : "this"
            } ],
            "property" : "end_date"
          } ]
        }, {
          "_type" : "property",
          "parameters" : [ {
            "_type" : "enum",
            "fullPath" : "DurationUnit"
          } ],
          "property" : "DAYS"
        } ]
      } ],
      "name" : "delta_days",
      "parameters" : [ ],
      "returnMultiplicity" : {
        "lowerBound" : 0,
        "upperBound" : 1
      },
      "returnType" : "Integer"
    } ],
    "taggedValues" : [ {
      "tag" : {
        "profile" : "meta::pure::profiles::doc",
        "value" : "doc"
      },
      "value" : "Data schema to define collateral (currently can reference loans or accounts)."
    } ]
  }
}